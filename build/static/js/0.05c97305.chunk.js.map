{"version":3,"sources":["util/validators.js","components/FormElements/Input.js","hooks/form-hook.js","hooks/http-hook.js","components/UIElements/Modal.js","components/UIElements/ErrorModal.js","components/FormElements/FileUpload.js","hooks/text-hook.js","components/Animation/CharBlock.js","components/Animation/TextArr.js","components/Animation/Visual.js"],"names":["VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_MAXLENGTH","VALIDATOR_EMAIL","validate","value","validators","_step","isValid","_iterator","_createForOfIteratorHelper","s","n","done","validator","trim","length","test","err","e","f","inputReducer","state","action","_objectSpread","isTouched","Input","props","_useReducer","useReducer","initialValue","initialValid","_useReducer2","_slicedToArray","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","React","createElement","placeholder","onChange","onBlur","rows","className","concat","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","_defineProperty","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValditiy","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","useHttpClient","_useState","useState","_useState2","isLoading","setIsLoading","_useState3","_useState4","gotError","setError","activeHttpRequests","useRef","sendRequest","_ref","_asyncToGenerator","_callee","url","body","headers","httpAbortCtrl","response","responseData","_args","arguments","_context","AbortController","current","fetch","signal","json","filter","reqCtrl","ok","message","t0","_x","apply","abortCtrl","abort","clearError","ModalOverlay","content","style","headerClass","header","onSubmit","preventDefault","contentClass","children","footerClass","footer","ReactDOM","createPortal","document","getElementById","Modal","Fragment","show","BackDrop","onClick","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","ErrorModal","onClear","Button","FileUpload","file","setFile","setIsValid","filePickerRef","display","ref","accept","pickedFile","fileIsValid","files","size","click","UserItem","format","data","dist","len","TextArr","map","CharBlock","byteState","Visual","_useTextVis","inputText","ctype","Array","from","char","inputArr","setInputArr","outputArr","setOutputArr","_useState5","_useState6","isAnimRunning","setAnimRunning","updateVisit","curr","newArr","_toConsumableArray","Math","min","max","updateVisitW","updateOutput","code","prevState","updateMatch","updateMatchW","updateUnique","findLongestMatch","currentPosition","endOfBuffer","bestMatchDistance","bestMatchLength","j","startIndex","substring","repetitions","floor","last","matchedString","k","compress77","match","_match","setTimeout","compressW","_callee2","compressed_data","dictionary_size","maximum_table_size","dictionary","string","_i2","symbol","string_plus_symbol","_context2","pow","parseInt","String","fromCharCode","console","log","compressor","useTextVis","mode","codeSpanRef","center","FontAwesomeIcon","icon","faPlay"],"mappings":"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","file":"static/js/0.05c97305.chunk.js","sourcesContent":["const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useEffect, useReducer } from 'react';\n\nimport { validate } from '../../util/validators';\n\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case 'TOUCH':\n      return {\n        ...state,\n        isTouched: true,\n      };\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isValid: props.initialValid || false,\n    isTouched: false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, onInput, value, isValid]);\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({ type: 'TOUCH' });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && 'form-control--invalid'\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) continue; //skipping udefined properties..\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValditiy) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValditiy,\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n","import { useCallback, useState, useRef, useEffect } from 'react';\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [gotError, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n      try {\n        const response = await fetch(url, {\n          method,\n          headers,\n          body,\n          signal: httpAbortCtrl.signal,\n        });\n        const responseData = await response.json();\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setIsLoading(false);\n        return responseData;\n      } catch (error) {\n        setError(error.message);\n        setIsLoading(false);\n        throw error;\n      }\n    },\n    []\n  );\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, gotError, sendRequest, clearError };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport BackDrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = (props) => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = (props) => {\n  return (\n    <React.Fragment>\n      {props.show && <BackDrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React, { useRef, useState } from 'react';\nimport Button from './Button';\nimport './FileUpload.css';\n\nconst FileUpload = (props) => {\n  const [file, setFile] = useState();\n  const [isValid, setIsValid] = useState(false);\n  const filePickerRef = useRef();\n\n  const pickedHandler = (event) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile.name);\n      setIsValid(true); //doesn't update immediately\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n  const pickFileHandler = () => {\n    filePickerRef.current.click();\n  };\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        style={{ display: 'none' }}\n        ref={filePickerRef}\n        type=\"file\"\n        // accept=\".txt\"\n        accept={props.accept}\n        onChange={pickedHandler}\n      />\n      <div className={`file-upload`}>\n        {file && <span>{file}</span>}\n        <Button type=\"button\" size={'small'} onClick={pickFileHandler}>\n          SELECT FILE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default FileUpload;\n","import { useCallback, useState } from 'react';\n\nexport const useTextVis = (inputText, ctype) => {\n  const size = inputText.length;\n  const windowSize = 5;\n  const data = inputText;\n  let [inputArr, setInputArr] = useState(\n    Array.from(inputText).map((char) => {\n      return { val: char, byteState: 'unv' };\n    })\n  );\n  let [outputArr, setOutputArr] = useState([]);\n  const [isAnimRunning, setAnimRunning] = useState(false);\n\n  const updateVisit = useCallback(\n    (curr) => {\n      if (!inputArr || inputArr.length === 0) return;\n      let newArr = [...inputArr];\n      for (let i = 0; i < Math.min(curr - windowSize, size); i++) {\n        newArr[i].byteState = 'vis';\n      }\n      for (\n        let i = Math.max(curr - windowSize, 0);\n        i < Math.min(curr, size);\n        i++\n      ) {\n        newArr[i].byteState = 'inWindow';\n      }\n      if (curr < size) newArr[curr].byteState = 'curr';\n\n      setInputArr(newArr);\n    },\n    [inputArr, size]\n  );\n\n  const updateVisitW = useCallback(\n    (curr) => {\n      let newArr = [...inputArr];\n      for (let i = 0; i < Math.min(curr, data.length); i++) {\n        newArr[i].byteState = 'vis';\n      }\n      if (curr < data.length) newArr[curr].byteState = 'curr';\n      setInputArr(newArr);\n    },\n    [inputArr, data]\n  );\n\n  const updateOutput = useCallback((code) => {\n    setOutputArr((prevState) => [...prevState, code]);\n  }, []);\n\n  const updateMatch = useCallback(\n    (curr, dist, len) => {\n      let newArr = [...inputArr];\n      for (let i = curr - dist; i < len; i++) {\n        if (i === curr) {\n          newArr[i].byteState = 'curr-match';\n          continue;\n        }\n        newArr[i].byteState = 'match';\n      }\n      setInputArr(newArr);\n    },\n    [inputArr]\n  );\n\n  const updateMatchW = useCallback(\n    (curr, len) => {\n      let newArr = [...inputArr];\n      // newArr[curr].byteState = 'curr-match';\n      for (let i = curr - len; i < Math.min(data.length, curr); i++) {\n        newArr[i].byteState = 'match';\n      }\n      setInputArr(newArr);\n    },\n    [inputArr, data]\n  );\n\n  const updateUnique = useCallback(\n    (curr) => {\n      let newArr = [...inputArr];\n      newArr[curr].byteState = 'unique';\n      setInputArr(newArr);\n    },\n    [inputArr]\n  );\n\n  const findLongestMatch = useCallback(\n    (currentPosition) => {\n      const lookahead_buffer_size = 8;\n      const endOfBuffer = Math.min(\n        currentPosition + lookahead_buffer_size,\n        size + 1\n      );\n      let bestMatchDistance = -1;\n      let bestMatchLength = -1;\n      for (let j = currentPosition + 2; j < endOfBuffer; j++) {\n        let startIndex = Math.max(0, currentPosition - windowSize);\n        let substring = data.slice(currentPosition, j);\n        for (let i = startIndex; i < currentPosition; i++) {\n          let repetitions = Math.floor(\n            substring.length / (currentPosition - i)\n          );\n          let last = substring.length % (currentPosition - i);\n          let matchedString = '';\n          for (let k = 0; k < repetitions; k++) {\n            matchedString += data.slice(i, currentPosition);\n          }\n          if (last > 0) {\n            matchedString += data.slice(i, i + last);\n          }\n          if (\n            matchedString === substring &&\n            substring.length > bestMatchLength\n          ) {\n            bestMatchDistance = currentPosition - i;\n            bestMatchLength = substring.length;\n          }\n        }\n      }\n      if (bestMatchDistance > 0 && bestMatchLength > 0) {\n        return [bestMatchDistance, bestMatchLength];\n      }\n      return null;\n    },\n    [data, size]\n  );\n\n  const compress77 = useCallback(async () => {\n    setAnimRunning(true);\n    await new Promise((resolve) => setTimeout(resolve, 500));\n    let i = 0;\n    let code;\n    while (i < size) {\n      updateVisit(i);\n      await new Promise((resolve) => setTimeout(resolve, 450));\n      const match = findLongestMatch(i);\n      if (match) {\n        const [bestMatchDistance, bestMatchLength] = match;\n        updateMatch(i, bestMatchDistance, bestMatchLength);\n\n        await new Promise((resolve) => setTimeout(resolve, 800));\n        code = {\n          type: 1,\n          dist: bestMatchDistance,\n          len: bestMatchLength,\n        };\n        i += bestMatchLength;\n      } else {\n        updateUnique(i);\n        await new Promise((resolve) => setTimeout(resolve, 800));\n        code = {\n          type: 0,\n          data: inputArr[i].val,\n        };\n        i += 1;\n      }\n      updateOutput(code);\n    }\n    updateVisit(size + windowSize + 1);\n    setAnimRunning(false);\n  }, [\n    size,\n    updateVisit,\n    findLongestMatch,\n    updateOutput,\n    updateMatch,\n    updateUnique,\n    inputArr,\n  ]);\n\n  const compressW = useCallback(async () => {\n    setAnimRunning(true);\n    const compressed_data = [];\n    let dictionary_size = 256;\n    const maximum_table_size = Math.pow(2, parseInt(12));\n    let dictionary = {};\n    for (let i = 0; i < dictionary_size; i++) {\n      dictionary[String.fromCharCode(i)] = i;\n    }\n    let string = '';\n    for (let i = 0; i < data.length; i++) {\n      updateVisitW(i);\n      await new Promise((resolve) => setTimeout(resolve, 450));\n      const symbol = data[i];\n      const string_plus_symbol = string + symbol;\n\n      if (dictionary[string_plus_symbol] !== undefined) {\n        string = string_plus_symbol;\n      } else {\n        compressed_data.push(dictionary[string]);\n        console.log(dictionary[string], string, i, string.length);\n        updateMatchW(i, string.length);\n        await new Promise((resolve) => setTimeout(resolve, 450));\n        console.log(inputArr);\n        await new Promise((resolve) => setTimeout(resolve, 800));\n        updateOutput({ type: 1, dist: dictionary[string], len: string });\n        if (dictionary_size <= maximum_table_size) {\n          dictionary[string_plus_symbol] = dictionary_size++;\n        }\n        string = symbol;\n      }\n    }\n    if (dictionary[string] !== undefined) {\n      compressed_data.push(dictionary[string]);\n      updateMatchW(data.length, string.length);\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      updateOutput({ type: 1, dist: dictionary[string], len: string });\n    }\n    updateVisitW(data.length + 1);\n    setAnimRunning(false);\n  }, [updateVisitW, data, updateMatchW, inputArr, updateOutput]);\n\n  let compressor;\n  if (ctype === 'lz77') compressor = compress77;\n  else compressor = compressW;\n\n  return {\n    inputArr,\n    outputArr,\n    compressor,\n    isAnimRunning,\n  };\n};\n","import React from 'react';\n\nimport './CharBlock.css';\n\nconst UserItem = (props) => {\n  if (props.format === 'plain') {\n    return <li className={`char-item ${props.type}`}>{props.value}</li>;\n  }\n  if (props.type === 0) {\n    return <li className={`code-item-circle`}>{props.data}</li>;\n  }\n  return (\n    <li className={`code-item-block`}>\n      {props.dist}-{props.len}\n    </li>\n  );\n};\n\nexport default UserItem;\n","import React from 'react';\n\nimport CharBlock from './CharBlock';\nimport './TextArr.css';\n\nconst TextArr = (props) => {\n  if (props.format === 'plain') {\n    let i = 0;\n    return (\n      <ul className=\"char-list\">\n        {props.value.map((element) => {\n          return (\n            <CharBlock\n              key={i++}\n              format={props.format}\n              value={element.val}\n              type={element.byteState}\n            />\n          );\n        })}\n      </ul>\n    );\n  }\n  let i = 0;\n  return (\n    <ul className=\"code-list\">\n      {props.value.map((element) => {\n        if (element.type === 0) {\n          return (\n            <CharBlock\n              key={i++}\n              format={props.format}\n              type={element.type}\n              data={element.data}\n            />\n          );\n        }\n        return (\n          <CharBlock\n            key={i++}\n            format={props.format}\n            type={element.type}\n            dist={element.dist}\n            len={element.len}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default TextArr;\n","import React, { useRef } from 'react';\nimport { useTextVis } from '../../hooks/text-hook';\nimport TextArr from './TextArr';\nimport Button from '../FormElements/Button';\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Visual.css';\n\nconst Visual = (props) => {\n  const { inputArr, outputArr, compressor, isAnimRunning } = useTextVis(\n    props.value,\n    props.mode\n  );\n  const codeSpanRef = useRef();\n  const btnHandler = (event) => {\n    event.target.style.display = 'none';\n    codeSpanRef.current.style.display = 'block';\n    compressor();\n  };\n\n  return (\n    <div className=\"vis-contain\">\n      <div className=\"text-contain\">\n        <span className=\"v-span1\">Plain-text: </span>\n        <TextArr value={inputArr} format=\"plain\" />\n      </div>\n      <div className=\"code-contain\">\n        <span className=\"v-span2\" ref={codeSpanRef}>\n          Code-word:{' '}\n        </span>\n        <TextArr value={outputArr} format=\"code\" />\n      </div>\n      <div className=\"btnHolder\">\n        <Button center onClick={btnHandler}>\n          {!isAnimRunning && <FontAwesomeIcon icon={faPlay} />}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Visual;\n"],"sourceRoot":""}